import * as React from 'react';
import Head from 'next/head';
import BlogPost from '../../components/Blog/BlogPost/BlogPost';
import Layout from '../../components/Layout/Layout';
import { IPageProps } from './../_app';
import IPost from '../../helper/types/blog/Post';
import IComment from '../../helper/types/blog/Comment';
import ICategory from '../../helper/types/blog/Category';
import IPopularPost from '../../helper/types/blog/PopularPost';

interface IProps extends IPageProps {
  status: boolean;
  post: IPost;
  comments: IComment[];
  categories: ICategory[];
  popular_posts: IPopularPost[];
}

class Index extends React.Component<IProps> {
  render() {
    return (
      <div dir="rtl" id="blog-post">
        <Head>
          <title>جی بلاگ | {this.props.post.title}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Layout
          postsForFooter={this.props.postsForFooter}
          domainsForNavbar={this.props.domainsForNavbar}
          licensesForNavbar={this.props.licensesForNavbar}
        >
          <BlogPost
            post={this.props.post}
            popularPosts={this.props.popular_posts}
            categories={this.props.categories}
            comments={this.props.comments}
          />
        </Layout>
      </div>
    );
  }
}

export async function getServerSideProps(context) {
  const locale = context.locale;
  const post = context.query.post;

  if (locale !== 'fa') {
    return {
      notFound: true,
    };
  }

  const respone = await fetch(
    `${process.env.SCHEMA}://${process.env.DOMAIN}/${locale}/blog/${post}?ajax=1`
  );
  const data = await respone.json();

  const blogIndexRes = await fetch(
    `${process.env.SCHEMA}://${process.env.DOMAIN}/${locale}/blog?ajax=1`
  );
  const blogIndexData = await blogIndexRes.json();

  // 404
  if (post === 'tag' || !data.status) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      ...data,
      categories: blogIndexData.categories,
      popular_posts: blogIndexData.popular_posts,
    },
  };
}

export default Index;
