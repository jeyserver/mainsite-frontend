import * as React from 'react';
import Head from 'next/head';
import BackupHosting from '../../components/HostsPricing/BackupHosting/BackupHosting';
import Layout from '../../components/Layout/Layout';
import { IPageProps } from '../_app';
import { IHostPlan } from '../../helper/types/products/Host/plan';

interface IProps extends IPageProps {
  plans: IHostPlan[];
}

interface IState {
  appIsScrolling: boolean;
}

let appIsScrollingTimeout;

class Index extends React.Component<IProps, IState> {
  constructor(props: IProps) {
    super(props);
    this.state = {
      appIsScrolling: false,
    };
    this.switchAppIsScrolling = this.switchAppIsScrolling.bind(this);
  }

  switchAppIsScrolling() {
    clearTimeout(appIsScrollingTimeout);
    this.setState((prev) => {
      return { appIsScrolling: true };
    });

    appIsScrollingTimeout = setTimeout(() => {
      this.setState((prev) => {
        return { appIsScrolling: false };
      });
    }, 1000);
  }

  componentWillUnmount() {
    clearTimeout(appIsScrollingTimeout);
  }

  render() {
    return (
      <div dir="rtl">
        <Head>
          <title>هاستینگ | هاست بکاپ</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Layout
          postsForFooter={this.props.postsForFooter}
          appIsScrolling={this.state.appIsScrolling}
          domainsForNavbar={this.props.domainsForNavbar}
          licensesForNavbar={this.props.licensesForNavbar}
        >
          <BackupHosting
            plans={this.props.plans}
            appIsScrolling={this.state.appIsScrolling}
            switchAppIsScrolling={this.switchAppIsScrolling}
          />
        </Layout>
      </div>
    );
  }
}

export async function getServerSideProps(context) {
  const locale = context.locale;

  if (locale !== 'fa') {
    return {
      notFound: true,
    };
  }

  const respone = await fetch(
    `${process.env.SCHEMA}://${process.env.DOMAIN}/${locale}/hosting/backup?ajax=1`
  );
  const data = await respone.json();

  return {
    props: {
      ...data,
    },
  };
}

export default Index;
