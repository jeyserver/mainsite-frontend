import * as React from 'react';
import Head from 'next/head';
import HostingConfigure from '../../../../components/Order/OrderDomain/HostingConfigure/HostingConfigure';
import Layout from '../../../../components/Layout/Layout';
import { IPageProps } from '../../../_app';
import IHostProduct from '../../../../helper/types/cart/host';
import IDomainProduct from '../../../../helper/types/cart/domain';
import backend from '../../../../axios-config';
import { connect } from 'react-redux';
import { RootState } from '../../../../store';

interface IProps extends IPageProps {
  products: IHostProduct[] | IDomainProduct[];
  cart: RootState['cart'];
}

interface IState {
  products: any;
}

class Index extends React.Component<IProps, IState> {
  constructor(props) {
    super(props);
    this.state = {
      products: [],
    };
  }

  componentDidMount() {
    backend(`/order/hosting/configure?cart=${this.props.cart.id}&ajax=1`)
      .then((res) => {
        this.setState({ products: res.data.products });
      })
      .catch(() => {});
  }

  render() {
    return (
      <div dir="rtl">
        <Head>
          <title>پیکربندی هاست</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Layout header={this.props.header} footer={this.props.footer}>
          <HostingConfigure
            domains={this.state.products.filter((i) => i.product === 'domain')}
            hosts={this.state.products.filter((i) => i.product === 'host')}
          />
        </Layout>
      </div>
    );
  }
}

export async function getServerSideProps(context) {
  const locale = context.locale;

  if (locale !== 'fa') {
    return {
      notFound: true,
    };
  }

  const respone = await fetch(`${process.env.SITE_URL}/${locale}?ajax=1`);
  const data = await respone.json();

  return {
    props: { ...data },
  };
}

export default connect((state: RootState) => {
  return { cart: state.cart };
})(Index);
