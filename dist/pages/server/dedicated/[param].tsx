import * as React from 'react';
import Head from 'next/head';
import CountryServer from '../../../components/Dedicated/CountryServers/CountryServers';
import CountryPlan from '../../../components/Dedicated/CountryPlan/CountryPlan';
import { countries } from '../../../components/Dedicated/lib/countries';
import Layout from '../../../components/Layout/Layout';
import { IPageProps } from '../../_app';
import { IDedicatedPlan } from '../../../helper/types/products/Dedicated/plan';

interface IProps extends IPageProps {
  countryPlans: {
    status: boolean;
    recommended: [];
    plans: IDedicatedPlan[];
  } | null;

  countryPlan: {
    status: boolean;
    plan: IDedicatedPlan;
  } | null;
}

class Index extends React.Component<IProps> {
  render() {
    if (this.props.countryPlans) {
      return (
        <div dir="rtl">
          <Head>
            <title>
              سرور اختصاصی{' '}
              {
                countries[
                  this.props.countryPlans.plans[0].datacenter.country.code
                ].title_fa
              }
            </title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <Layout header={this.props.header} footer={this.props.footer}>
            <CountryServer countryPlans={this.props.countryPlans} />
          </Layout>
        </div>
      );
    } else {
      return (
        <div dir="rtl">
          <Head>
            <title> {this.props.countryPlan.plan.title} سرور اختصاصی</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <Layout header={this.props.header} footer={this.props.footer}>
            <CountryPlan plan={this.props.countryPlan.plan} />
          </Layout>
        </div>
      );
    }
  }
}

export async function getServerSideProps(context) {
  const locale = context.locale;
  const param = context.query.param;

  if (locale !== 'fa') {
    return {
      notFound: true,
    };
  }

  let countryPlans = null;
  let countryPlan = null;

  if (Number(param)) {
    const countryPlanRes = await fetch(
      `${process.env.SITE_URL}/${locale}/server/dedicated/${param}?ajax=1`
    );
    countryPlan = await countryPlanRes.json();

    if (!countryPlan.status) {
      return {
        notFound: true,
      };
    }
  } else {
    const countryPlansRes = await fetch(
      `${process.env.SITE_URL}/${locale}/server/dedicated/${param}?ajax=1`
    );
    countryPlans = await countryPlansRes.json();

    if (!countryPlans.status) {
      return {
        notFound: true,
      };
    }
  }

  return {
    props: {
      countryPlans,
      countryPlan,
      header: countryPlan ? countryPlan.header : countryPlans.header,
      footer: countryPlan ? countryPlan.footer : countryPlans.footer,
    },
  };
}

export default Index;
